<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JS Drum Kit</title>
  <link rel="stylesheet" href="/stylesheets/main.css" type="text/css">
</head>
<body>
  
  <div class="all-keys">
    <div class="keys">
      <div data-key="81" class="key"> 
        <kbd>Q</kbd>
        <span class="sound">G#</span>
      </div>
      <div data-key="87" class="key">
        <kbd>W</kbd>
        <span class="sound">A#</span>
      </div>
      <div data-key="69" class="key">
        <kbd>E</kbd>
        <span class="sound">B</span>
      </div>
      <div data-key="82" class="key">
        <kbd>R</kbd>
        <span class="sound">C#</span>
      </div>
      <div data-key="84" class="key">
        <kbd>T</kbd>
        <span class="sound">D# (i)</span>
      </div>
      <div data-key="89" class="key">
        <kbd>Y</kbd>
        <span class="sound">F</span>
      </div>
      <div data-key="85" class="key">
        <kbd>U</kbd>
        <span class="sound">F#</span>
      </div>
      <div data-key="73" class="key">
        <kbd>I</kbd>
        <span class="sound">G#</span>
      </div>
    </div>
      
    
    <div class="keys">
      <div data-key="65" class="key"> 
        <kbd>A</kbd>
        <span class="sound">Vox 1</span>
      </div>
      <div data-key="83" class="key">
        <kbd>S</kbd>
        <span class="sound">Vox 2</span>
      </div>
      <div data-key="68" class="key">
        <kbd>D</kbd>
        <span class="sound">Vox 3</span>
      </div>
      <div data-key="70" class="key">
        <kbd>F</kbd>
        <span class="sound">Vox 4</span>
      </div>
      <div data-key="71" class="key">
        <kbd>G</kbd>
        <span class="sound">Bmaj(VI)</span>
      </div>
      <div data-key="72" class="key">
        <kbd>H</kbd>
        <span class="sound">C#maj(VII)</span>
      </div>
      <div data-key="74" class="key">
        <kbd>J</kbd>
        <span class="sound">D#m(i)</span>
      </div>
      <div data-key="75" class="key">
        <kbd>K</kbd>
        <span class="sound">Bbm(v)</span>
      </div>
    </div>
      
      
      <div class="keys">
        <div data-key="90" class="key"> 
          <kbd>Z</kbd>
          <span class="sound">Intro Drums</span>
        </div>
        <div data-key="88" class="key">
          <kbd>X</kbd>
          <span class="sound">Verse Drums</span>
        </div>
        <div data-key="67" class="key">
          <kbd>C</kbd>
          <span class="sound">Build Drums</span>
        </div>
        <div data-key="86" class="key">
          <kbd>V</kbd>
          <span class="sound">Drop Drums</span>
        </div>
        <div data-key="66" class="key">
          <kbd>B</kbd>
          <span class="sound">Bmajor(VI)</span>
        </div>
        <div data-key="78" class="key">
          <kbd>N</kbd>
          <span class="sound">C#major(VII)</span>
        </div>
        <div data-key="77" class="key">
          <kbd>M</kbd>
          <span class="sound">D#m(i)</span>
        </div>
        <div data-key="188" class="key">
          <kbd><</kbd>
          <span class="sound">Bbm(v)</span>
        </div>
      </div>   
  </div>
  
  [81, 87, 69, 82, 84, 89, 85, 73, 79, 80]
  
  <audio data-key="81" src="sounds/melody/MelodyGsharpLow(iv).wav"></audio>
  <audio data-key="87" src="sounds/melody/MelodyAsharp(v).wav"></audio>
  <audio data-key="69" src="sounds/melody/MelodyB(vi).wav"></audio>
  <audio data-key="82" src="sounds/melody/MelodyCsharp(vii).wav"></audio>
  <audio data-key="84" src="sounds/melody/MelodyDsharp(i).wav"></audio>
  <audio data-key="89" src="sounds/melody/MelodyF(ii).wav"></audio>
  <audio data-key="85" src="sounds/melody/MelodyFSharp(iii).wav"></audio>
  <audio data-key="73" src="sounds/melody/MelodyGsharpHi(iv).wav"></audio>

  

  <audio data-key="65" src="sounds/voxChops/VoxChop1.wav"></audio>
  <audio data-key="83" src="sounds/voxChops/VoxChop2.wav"></audio>
  <audio data-key="68" src="sounds/voxChops/VoxChop4.wav"></audio>
  <audio data-key="70" src="sounds/voxChops/VoxChop3.wav"></audio>
  <audio data-key="71" src="sounds/chillChords/ChillChords1_Bmaj(VI).wav"></audio>
  <audio data-key="72" src="sounds/chillChords/ChillChords2_CsharpMaj(VII).wav"></audio>
  <audio data-key="74" src="sounds/chillChords/ChillChords3_DsharpMin(i).wav"></audio>
  <audio data-key="75" src="sounds/chillChords/ChillChords4_Bbm(v).wav"></audio>

  [71, 72, 74, 75]
  
  [90, 88, 67, 86, 66, 78, 77]
  
  <audio data-key="90" src="sounds/drums/Drums1_Tambo.mp3"></audio>
  <audio data-key="88" src="sounds/drums/Drums2_Verse.mp3"></audio>
  <audio data-key="67" src="sounds/drums/Drums3_BuildUp.mp3"></audio>
  <audio data-key="86" src="sounds/drums/Drums4_Drop.wav"></audio>
  <audio data-key="66" src="sounds/dropChords/ChordsBass1_Bmaj(VI).mp3"></audio>
  <audio data-key="78" src="sounds/dropChords/ChordsBass2_CSharpmaj(VII).mp3"></audio> 
  <audio data-key="77" src="sounds/dropChords/ChordsBass3_DSharpm(i).mp3"></audio>
  <audio data-key="188" src="sounds/dropChords/ChordsBass4_Bbm(iv).mp3"></audio>
  
  
  
<script type="text/javascript">

  // function playSound(e) {
  //   const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
  //   const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
  //   if(!audio) return; // stops the function from running
  //   audio.currentTime = 0; //rewind to the start
  //   audio.play();
  //   key.classList.add('playing');
  // };
  
  
  // array that will contain the keycodes of what is playing
  const isPlaying = [];

  
  function playChordSound(e) {
    const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
    if(!audio) return; // stops the function from running
    const chordCodes = [66, 78, 77, 188, 71, 72, 74, 75];
    if(!chordCodes.includes(e.keyCode)) return;
    audio.currentTime = 0; //rewind to the start
    audio.play();
    //make the chords exclusive
    
    makeExclusive(chordCodes, e);
    // const drumCodes = [90, 88, 67,86];
    // makeExclusive(drumCodes, e);
    
    
    // push the keycode into the isPlaying array
    isPlaying.push(e.keyCode);
    key.classList.add('playing');
    audio.onended = function() {
      const index = isPlaying.indexOf(e.keyCode)
      isPlaying.splice(index, 1)
    }
  };
  
  function playDrumSound(e) {
    const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
    if(!audio) return; // stops the function from running
    const drumCodes = [90, 88, 67,86];
    if(!drumCodes.includes(e.keyCode)) return;
    audio.currentTime = 0; //rewind to the start
    audio.play();
    //make the chords exclusive
    
    makeExclusive(drumCodes, e);
    
    // makeExclusive(drumCodes, e);
    
    
    // push the keycode into the isPlaying array
    isPlaying.push(e.keyCode);
    key.classList.add('playing');
    audio.onended = function() {
      const index = isPlaying.indexOf(e.keyCode)
      isPlaying.splice(index, 1)
    }
  };
  
  function playVoxSound(e) {
    const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
    if(!audio) return; // stops the function from running
    const voxCodes = [65, 83, 68, 70];
    if(!voxCodes.includes(e.keyCode)) return;
    audio.currentTime = 0; //rewind to the start
    audio.play();
    //make the chords exclusive
    
    makeExclusive(voxCodes, e);
    
    // makeExclusive(drumCodes, e);
    
    
    // push the keycode into the isPlaying array
    isPlaying.push(e.keyCode);
    key.classList.add('playing');
    audio.onended = function() {
      const index = isPlaying.indexOf(e.keyCode)
      isPlaying.splice(index, 1)
    }
  };
  
  function playMelodySound(e) {
    const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
    if(!audio) return; // stops the function from running
    const melodyCodes = [81, 87, 69, 82, 84, 89, 85, 73, 79, 80];
    if(!melodyCodes.includes(e.keyCode)) return;
    audio.currentTime = 0; //rewind to the start
    audio.play();
    
    // // make exclusive
    // makeExclusive(melodyCodes, e);
    
    // push the keycode into the isPlaying array
    isPlaying.push(e.keyCode);
    key.classList.add('playing');
    audio.onended = function() {
      const index = isPlaying.indexOf(e.keyCode)
      isPlaying.splice(index, 1)
    }
  };
  

  // function to see if an element is in isPlaying array
  function isInIsPlaying(e) {
    for (let i = 0; i < isPlaying.length; i++) {
      if (isPlaying[i] === e.keyCode) {
        return true;
      }
    }
    return false;
  };
  

  // make exclusive function
  function makeExclusive(codeArray, e) {
    if (codeArray.includes(e.keyCode)) {
      const index = codeArray.indexOf(e.keyCode);
      codeArray.splice(index, 1);
    } 

    console.log(codeArray);
    codeArray.forEach(function(code) {
      document.querySelector(`audio[data-key="${code}"]`).pause();
      if (isInIsPlaying(code)) {
          const codeIndex = isPlaying.indexOf(code);
          isPlaying.splice(codeIndex, 1);
      }
    }); 
  };

  // function toggleSound(e) {
  //   const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
  //   const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);
    
  //   if(!audio) return; // stops the function from running
  //   if (isInIsPlaying(e)) {
  //     audio.pause();
  //     const index = isPlaying.indexOf(e.keyCode);
  //     isPlaying.splice(index, 1);
  //   } else {
  //     audio.currentTime = 0; //rewind to the start
  //     audio.play();
      
  //     //make the chords exclusive
  //     const chordCodes = [66, 78, 77, 188];
  //     makeExclusive(chordCodes, e);
      
  //     // push the keycode into the isPlaying array
  //     isPlaying.push(e.keyCode);
  //     key.classList.add('playing');
  //   }
  //   //console.log(isPlaying);
  // };
  

  function removeTransition(e) {
    if(e.propertyName !== 'transform') return;
    this.classList.remove('playing');
  }

  const keys = document.querySelectorAll('.key');
  keys.forEach(key => key.addEventListener('transitionend', removeTransition));
  
  
  
  // // set url
  // let url = "sounds/drums/Drums4_Drop.wav";
  
  // // setup Web Audio Context
  // //===========================================
  // const context = new AudioContext();
  // const source = context.createBufferSource();
  // source.connect(context.destination);
  
  // // load buffer
  // //===========================================
  // const request = new XMLHttpRequest();
  // request.open('GET', url, true);
  // request.responseType = 'arraybuffer';
  // request.onload = function() {
  //   context.decodeAudioData(request.response, function(response) {
  //     // play sound after buffer has loaded
  //     source.buffer = response;
  //     source.start(0);
  //     source.loop = true;
  //   }, function() {console.error('request has failed');
  //   });
  // };
  // //request.send();

  window.addEventListener('keydown', playChordSound);
  window.addEventListener('keydown', playDrumSound);
  window.addEventListener('keydown', playVoxSound);
  window.addEventListener('keydown', playMelodySound);
  
</script>


</body>
</html>